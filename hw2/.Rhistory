plot3d((X[,1],X[,2],X[,3]))
plot3d(c(X[,1],X[,2],X[,3]))
load('family.rda')
attach(family)
# ## 1
intercept = rep(1,length(weight))
X = cbind(intercept,height, bmi)
betahat = solve(crossprod(X,X), t(X) %*% weight)
residuals = weight - X %*% betahat
# ## 2
regcoef = function(df=family[4:5]){
x = df[,1]
y = df[,2]
b = sum((y-mean(y))*(x-mean(x)))/sum((x-mean(x))^2)
a = mean(y) - b*mean(x)
return(c(a,b))
}
regline = function(df=family[4:5]){
coeff = regcoef(df)
plot(height,weight, main = "Least Squares Regression Line",cex = bmi*0.06)
abline(coeff[1],coeff[2])
}
regline()
# bmi is increasing with both weight and height
# ## 3
library(rgl)
plot3d(c(X[,1],X[,2],X[,3]))
plot3d(X[,1],X[,2],X[,3])
plot3d(X[,1],X[,2],X[,3])
plot3d(weight,X[,2],X[,3])
planes3d(betahat)
planes3d(betahat[3],betahat[2],betahat[1])
planes3d(betahat[3],betahat[2],betahat[1])
plot3d(weight,X[,2],X[,3])
planes3d(betahat[3],betahat[2],betahat[1])
open3d()
plot3d(weight,X[,2],X[,3])
planes3d(betahat[3],betahat[2],betahat[1])
planes3d(betahat[1],betahat[2],betahat[3],)
planes3d(betahat[1],betahat[2],betahat[3])
planes3d(betahat[1])
planes3d(betahat[1],betahat[2],betahat[3],-30)
plot3d(weight,X[,2],X[,3])
planes3d(betahat[1],betahat[2],betahat[3],-30)
planes3d(betahat[1],betahat[2],betahat[3],-300)
planes3d(betahat[1],betahat[2],betahat[3],mean(X%*%betahat))
mean(X%*%betahat)
planes3d(betahat[1],betahat[2],betahat[3],add=TRUE)
plot3d(weight,X[,2],X[,3])
planes3d(betahat[1],betahat[2],betahat[3],add=TRUE)
library(rgl)
plot3d(weight,X[,2],X[,3])
planes3d(betahat[1],betahat[2],betahat[3],add=TRUE)
library(rgl)
plot3d(weight,X[,2],X[,3])
planes3d(betahat[1],betahat[2],betahat[3],add=TRUE)
plot3d(weight,X[,2],X[,3])
planes3d(betahat[1],betahat[2],betahat[3],add=TRUE)
plot3d(X[,2],X[,3],weight)
planes3d(betahat[1],betahat[2],betahat[3],add=TRUE)
planes3d(betahat[2],betahat[3],c=-1,add=TRUE,alpha=.5)
plot3d(X[,2],X[,3],weight)
planes3d(betahat[2],betahat[3],c=-1,add=TRUE,alpha=.5)
planes3d(betahat[2],betahat[3],add=TRUE,alpha=.5)
planes3d(betahat[2],betahat[3],add=TRUE,alpha=.5,expand=0.5)
planes3d(betahat[2],betahat[3],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
rgl.open()
plot3d(X[,2],X[,3],weight,color ="lightgray")
plot3d(X[,2],X[,3],weight,col ="lightgray")
planes3d(betahat[2],betahat[3],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],d=X%*%betahat,add=TRUE,alpha=.5,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],d=X%*%betahat,add=TRUE,alpha=.5,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],d=X%*%betahat,add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],X%*%betahat,add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[1],betahat[2],betahat[3],X%*%betahat,add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[1],betahat[2],betahat[3],d=X%*%betahat,add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],c=-1,d=X%*%betahat,add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],c=0,betahat[1],add=TRUE,alpha=.2,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],c=0,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
rgl.open()
plot3d(X[,2],X[,3],weight,col ="lightgray")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
plot3d(X[,2],X[,3],weight,col ="lightgray")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
plot3d(X[,2],X[,3],weight,col ="lightgray")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightblue')
plot3d(X[,2],X[,3],weight)
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightgray')
plot3d(X[,2],X[,3],weight,"height","bmi","weight")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightgray')
plot3d(X[,2],X[,3],weight,"height","bmi","weight")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightgray')
plot3d(X[,2],X[,3],weight,"height","bmi","weight")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,expand=0.5,col='lightgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="#D95F02")
plot3d(X[,2],X[,3],weight,"height","bmi","weight")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="#D95F02")
rgl.open()
plot3d(X[,2],X[,3],weight,"height","bmi","weight")
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='lightgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="#D95F02")
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='lightgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="#D95F02")
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='darkgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="#D95F02")
library(rgl)
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='darkgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="#D95F02")
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="lightblue")
library(rgl)
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='darkgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="lightblue")
M = X[,1:2]
N = X[,3]
gamma_1 = solve(crossprod(M,M), crossprod(M,weight))
f = Y - M %*% gamma_1
Y = weight
gamma_1 = solve(crossprod(M,M), crossprod(M,weight))
f = Y - M %*% gamma_1
gamma_2 = solve(crossprod(N,N), crossprod(M,Y))
4
M = X[,1:2]
N = X[,3]
Y = weight
# step 1
gamma_1 = solve(crossprod(M,M), crossprod(M,Y))
f = Y - M %*% gamma_1
# step 2
gamma_2 = solve(crossprod(M,M), crossprod(M,N))
g = N - M %*% gamma_2
# step 3
gamma_3 = sum(f*g)/sum(g*g)
e = f-g*gamma_3
# step 4
betahatBis = c(gamma_1-gamma_2*gamma_3,gamma_3)
betahatBis
betahat
betahat==betahatBis
betahat-betahatBis
abs(betahat-betahatBis)
par3d(params=list(
windowRect=c(100,100,600,600)))
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='darkgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="lightblue")
view3d( theta = 10, phi = 0)
view3d( theta = 2, phi = 0)
view3d( theta = 2, phi = 10)
view3d( theta = 2, phi = 30)
view3d( theta = 20, phi = 30)
view3d( theta = 70, phi = 30)
view3d( theta = 70, phi = 20)
view3d( theta = 80, phi = 20)
view3d( theta = 100, phi = 20)
view3d( theta = 130, phi = 20)
view3d( theta = 110, phi = 20)
view3d( theta = 30, phi = 20)
view3d( theta = 40, phi = 20)
view3d( theta = 60, phi = 20)
view3d( theta = 70, phi = 20)
view3d( theta = 75, phi = 20)
view3d( theta = 70, phi = 20)
M <- par3d("userMatrix")              # get current position matrix
M1 <- rotate3d(M, .9*pi/2, 1, 0, 0)
M2 <- rotate3d(M1, pi/2, 0, 0, 1)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F, dir="pics")
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F, dir="./pics")
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=10, convert=F,
clean=F)
M1 <- rotate3d(M, .1*pi/2, 1, 0, 0)
M2 <- rotate3d(M1, .1pi/2, 0, 0, 1)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F)
M2 <- rotate3d(M1, .1*pi/2, 0, 0, 1)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F)
M <- par3d("userMatrix")              # get current position matrix
M1 <- rotate3d(M, .1*pi/2, 1, 0, 0)
M2 <- rotate3d(M1, .1*pi/2, 0, 0, 1)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F)
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F,dir = ".")
movie3d(par3dinterp( userMatrix=list(M, M1, M2, M1, M),
method="linear"), duration=4, convert=F,
clean=F,dir = "./movie")
install.packages('knitr')
Sweave2knitr("DoutreThibaultHW2.Rnw")
library(knitr)
Sweave2knitr("DoutreThibaultHW2.Rnw")
rgl.postscript("plot.pdf","pdf")
library(rgl)
par3d(params=list(
windowRect=c(100,100,600,600)))
view3d( theta = 70, phi = 20)
plot3d(X[,2],X[,3],weight,"height","bmi","weight",col='darkgray')
planes3d(betahat[2],betahat[3],c=-1,betahat[1],add=TRUE,alpha=.5,col="lightblue")
rgl.postscript("plot.pdf","pdf")
\includepdf{plot.pdf}
