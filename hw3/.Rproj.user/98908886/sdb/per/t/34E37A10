{
    "contents" : "###  HW 3   Doutre Thibault\nrm(list = ls())\n# Question 1 --------------------------------------------------------------\n\ngenerate_data = function(n = 100){\n  # Define parameters\n  rho = 0.7\n  mu1=180; s1=40; mu2=66; s2=3\n  \n  # Define X, Y and Z with the bivariate normal relationship\n  X = rnorm(n)\n  Z = rnorm(n)\n  Y = rho * X + sqrt(1-rho^2) * Z\n  eps = sqrt(1-rho^2) * Z\n  \n  # Adjust rho by transforming Y\n  rho_hat = cor(X,Y)\n  a = s1^4*(rho^2-1)\n  b = 2*rho_hat*s1^3*s2*(rho^2-1)\n  c = (rho^2-rho_hat^2)*s2^2*s1^2\n  delta = b^2-4*a*c\n  correction = (-b-sqrt(delta))/(2*a)\n  Y=Y+correction*X\n  \n  # Adjust means and variances\n  Y = (Y-mean(Y))/sd(Y)*s2+mu2\n  X = (X-mean(X))/sd(X)*s1+mu1\n  \n  # Put into data frame\n  df = data.frame(WT = Y,\n                  HT = X,\n                  BMI = 703 * Y / X^2)\n  \n  # Output\n  return(list(df=df,rho=rho,eps=eps))\n}\ndata = generate_data()\n\nM = cbind(WT,HT)\nrho = data$rho\neps = data$eps\n\n# Correlation and covariance matrices\ncor(M) \ncov(M)\n\n# Parameters of variables\n\n\n\n\n\n# Question 2 --------------------------------------------------------------\n\nlm.fit = lm(WT ~ ., data = df)\nlm.fit$coefficients\n\n\n# First X and Y are random variables, not observed values. Here we know $\\beta$ and do observe $\\epsilon$. \n# The model is not linear itself, i.e. BMI is not a linear function of the columns of X.\n# The resuiduals are not gaussian.\npar(mfrow=c(2,2))\nplot(lm.fit)\npar(mfrow=c(1,1))\n\n# In particular, the sd of the residuals is not equal to 1:\nsd(lm.fit$residuals)\n\n\n# Question 3 --------------------------------------------------------------\n\n# The true value of $\\beta_1$, the coefficient associated with the height $HT$ is the value of $\\rho$ \n# because of the relationship of the bivariate normal $WT=\\rho HT+\\sqrt{1-\\rho^2}Z$ where $Z$ is $N(0,1)$.\n\n\nbeta = function(n=100){\n  data = generate_data(n)\n  df = data$df\n  lm.fit = lm(WT ~ HT+BMI, data = df)\n  lm.fit$coefficients\n}\n\n# The simulated value of $\\beta_1$ is\nbeta1 = beta()[\"HT\"]\nbeta1\n\n\n# Question 4 --------------------------------------------------------------\n\n# According to Theorem 2, page 43 of Freedman, OLS is conditionally unbiased, \n# that is, $E(\\hat{\\beta}|X) = \\beta$\n\n#set.seed(21)\n#beta_vect = Vectorize(beta)\n#beta1s = beta_vect(seq(100,100000,by=100))[3,]\n#plot(beta1s)\n#abline(h = rho)\n\n# Question 5 --------------------------------------------------------------\n\nWT_hat = predict(lm.fit)\ne = WT-WT_hat\n\n# To see if the variables are correlated, wee look for some pattern in the plot of one against the other.\nplot(eps,WT) # not correlated, seem to be independent\nplot(eps,HT) # positively correlated -> dependent\nplot(e,WT) # correlated in some quadratic way -> dependent\nplot(e,HT) # correlated in some quadratic way -> dependent\n\n# To see if two vectors are orthogonal, I compute their scalar product.\nsum(e*WT) # orthogonal\nsum(e*HT) # orthogonal\nsum(eps*WT) # not orthogonal\nsum(eps*HT) # not orthogonal\n\n# Question 6 --------------------------------------------------------------\n\n\nbetas = replicate(1000,beta()[\"HT\"])\nbeta()\n\n#  Question 7 -------------------------------------------------------------\n\nhist(betas)\nabline(v = rho) \n",
    "created" : 1455177750455.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2711589480",
    "id" : "34E37A10",
    "lastKnownWriteTime" : 1455179843,
    "path" : "~/Documents/stat230A/hw3/DoutreThibaultHW3.R",
    "project_path" : "DoutreThibaultHW3.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}