print('-')
return(list(y=y,x=x))
}
abc = makedata()
cv_tree(abc)
makedata=function(p=20,n=100){
X=matrix(rnorm(n*p),n,p)
exps=seq(-1,-2.5,length=p)
beta=rep(0,p)
beta=exp(exps)
Y=.5+X%*%beta+rnorm(n)
data = data.frame(Y,X)
colnames(data)=c("Y",letters[1:20])
switch=sample(20)+1
data=data[,c(1,switch)]
names(beta)=names(data)[switch]
data = as.data.frame(data)
return(data)
}
cv_tree = function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print('2')
cv = cv.tree(tree.out,FUN=prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cv_tree(abc)
cv_tree = function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cv = cv.tree(tree.out,FUN=prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cv_tree(abc)
cv_tree = function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cv = cv.tree(tree.out,prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cv_tree(abc)
cv_tree = function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cva = cv.tree(tree.out,prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cv_tree(abc)
library(tree)
cv_tree = function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cv = cv.tree(tree.out,prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cv_tree(abc)
df
data
cvtree = function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cv = cv.tree(tree.out,prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cv = cv.tree(tree.out,prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
print(a)
print('1')
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print(tree.out)
cv = cv.tree(tree.out,prune.tree)
print('3')
MSE = cv$dev/nrow(a)
print('-')
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
abc
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
cv = cv.tree(tree.out,prune.tree)
MSE = cv$dev/nrow(a)
size = p-cv$size
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
cv = cv.tree(tree.out,prune.tree)
print('---')
MSE = cv$dev/nrow(a)
size = p-cv$size
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
makedata
makedata=function(p=20,n=100){
X=matrix(rnorm(n*p),n,p)
exps=seq(-1,-2.5,length=p)
beta=rep(0,p)
beta=exp(exps)
Y=.5+X%*%beta+rnorm(n)
data = cbind(Y,X)
colnames(data)=c("Y",letters[1:20])
switch=sample(20)+1
data=data[,c(1,switch)]
names(beta)=names(data)[switch]
data = as.data.frame(data)
return(data)
}
library(tree)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
cv = cv.tree(tree.out,prune.tree)
print('---')
MSE = cv$dev/nrow(a)
size = p-cv$size
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
makedata=function(p=20,n=100){
X=matrix(rnorm(n*p),n,p)
exps=seq(-1,-2.5,length=p)
beta=rep(0,p)
beta=exp(exps)
Y=.5+X%*%beta+rnorm(n)
data = data.frame(Y,X)
colnames(data)=c("Y",letters[1:20])
switch=sample(20)+1
data=data[,c(1,switch)]
names(beta)=names(data)[switch]
return(data)
}
## # Tree
library(tree)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
cv = cv.tree(tree.out,prune.tree)
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
## # Tree
library(tree)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
cv = cv.tree(tree.out,prune.tree)
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
## # Tree
library(tree)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,data=a)
print('-')
cv = cv.tree(tree.out,prune.tree)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
ree
library(tree)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,a)
print('-')
cv = cv.tree(tree.out,prune.tree)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
install.packages('tree')
install.packages("tree")
## # Tree
library(tree)
cvtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,a)
print('-')
cv = cv.tree(tree.out,prune.tree)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
p = ncol(a)-1
tree.out = tree(Y~.,a)
print('-')
cv = cv.tree(tree.out,prune.tree)
p = ncol(a)-1
a = abc
p = ncol(a)-1
tree.out = tree(Y~.,a)
print('-')
cv = cv.tree(tree.out,prune.tree)
print('-')
tree.out
cv = cv.tree(tree.out,prune.tree)
print('-')
cv = cv.tree(tree.out,prune.tree)
cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
vtree <- function(a){
p = ncol(a)-1
tree.out = tree(Y~.,a)
print('-')
cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
abc = makedata()
cvtree(abc)
tree.out
summary(tree.out)
abc
tree.out=tree(Y~., abc)
tree.cv = cv.tree(tree.out)
tree.cv
cvtree <- function(a){
p = ncol(a)-1
tree.out=tree(Y~., a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
y[size]=MSE
print('-')
return(list(y=y,x=x))
}
summary(tree.out)
abc = makedata()
cvtree(abc)
cvtree
a = abc
p = ncol(a)-1
tree.out=tree(Y~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
print('-')
x=0:20
y=rep(NaN,21)
ncol(a)-1
cvtree <- function(a){
p = 20
tree.out=tree(Y~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
p = 20
tree.out=tree(Y~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
p = 20
tree.out=tree(Y~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
p = 20
tree.out=tree(Y~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
a = abc
cvtree <- function(a){
p = 20
tree.out=tree(Y~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/nrow(a)
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
p = 20
tree.out=tree(a[,1]~., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/100
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
cvtree <- function(a){
p = 20
tree.out=tree(Y~1+., data=a)
tree.cv = cv.tree(tree.out)
print('-')
MSE = cv$dev/100
size = p-cv$size
y=rep(NaN,21)
y[size]=MSE
return(list(y=y,x=0:20))
}
abc = makedata()
cvtree(abc)
